const fs = require('fs');
const path = require('path');
const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

// Configuraci√≥n de Supabase
const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Error: Variables de entorno SUPABASE_URL y SUPABASE_SERVICE_ROLE_KEY no est√°n configuradas');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function ejecutarSQL(sql) {
  try {
    const { data, error } = await supabase.rpc('exec_sql', { sql_query: sql });
    if (error) {
      console.log(`   ‚ö†Ô∏è  ${error.message}`);
      return false;
    }
    return true;
  } catch (err) {
    console.log(`   ‚ùå ${err.message}`);
    return false;
  }
}

async function ejecutarScriptCompleto() {
  console.log('üöÄ Iniciando actualizaci√≥n completa de preguntas por carrera...\n');
  
  try {
    // Paso 1: Desactivar todas las preguntas existentes
    console.log('üìù Paso 1: Desactivando preguntas existentes...');
    const { error: error1 } = await supabase
      .from('preguntas_evaluacion')
      .update({ activa: false })
      .eq('activa', true);
    
    if (error1) {
      console.log('‚ö†Ô∏è  Error desactivando preguntas:', error1.message);
    } else {
      console.log('‚úÖ Preguntas desactivadas correctamente');
    }
    
    // Paso 2: Verificar/crear categor√≠as
    console.log('\nüìù Paso 2: Verificando categor√≠as...');
    const categorias = [
      { nombre: 'Comunicaci√≥n', descripcion: 'Preguntas relacionadas con la comunicaci√≥n y manejo de aula del docente', orden: 1 },
      { nombre: 'Conocimiento del Tema', descripcion: 'Preguntas sobre el dominio y aplicaci√≥n de los contenidos', orden: 2 },
      { nombre: 'Metodolog√≠a de Ense√±anza', descripcion: 'Preguntas sobre estrategias y m√©todos de ense√±anza', orden: 3 },
      { nombre: 'Evaluaci√≥n', descripcion: 'Preguntas sobre evaluaci√≥n y retroalimentaci√≥n', orden: 4 },
      { nombre: 'Disponibilidad', descripcion: 'Preguntas sobre disponibilidad y aporte del docente', orden: 5 }
    ];
    
    for (const categoria of categorias) {
      const { data: existing } = await supabase
        .from('categorias_pregunta')
        .select('id')
        .eq('nombre', categoria.nombre)
        .single();
      
      if (!existing) {
        const { error } = await supabase
          .from('categorias_pregunta')
          .insert([{ ...categoria, activa: true }]);
        
        if (error) {
          console.log(`   ‚ö†Ô∏è  Error creando categor√≠a ${categoria.nombre}:`, error.message);
        } else {
          console.log(`   ‚úÖ Categor√≠a ${categoria.nombre} creada`);
        }
      } else {
        console.log(`   ‚úÖ Categor√≠a ${categoria.nombre} ya existe`);
      }
    }
    
    // Paso 3: Obtener IDs de categor√≠as
    console.log('\nüìù Paso 3: Obteniendo IDs de categor√≠as...');
    const { data: categoriasData, error: error3 } = await supabase
      .from('categorias_pregunta')
      .select('id, nombre')
      .eq('activa', true);
    
    if (error3) {
      console.log('‚ùå Error obteniendo categor√≠as:', error3.message);
      return;
    }
    
    const categoriaMap = {};
    categoriasData.forEach(cat => {
      categoriaMap[cat.nombre] = cat.id;
    });
    
    console.log('‚úÖ Categor√≠as obtenidas:', Object.keys(categoriaMap).join(', '));
    
    // Paso 4: Insertar preguntas para cada carrera
    console.log('\nüìù Paso 4: Insertando preguntas por carrera...');
    
    const carreras = [
      { id: 1, nombre: 'Ingenier√≠a de Sistemas' },
      { id: 2, nombre: 'Ingenier√≠a Civil' },
      { id: 3, nombre: 'Ingenier√≠a Ambiental' },
      { id: 4, nombre: 'Ingenier√≠a de Energ√≠as' },
      { id: 5, nombre: 'Ingenier√≠a de Telecomunicaciones' },
      { id: 6, nombre: 'Ingenier√≠a Financiera' },
      { id: 7, nombre: 'Ingenier√≠a Industrial' },
      { id: null, nombre: 'Tronco Com√∫n' }
    ];
    
    // Preguntas base (comunes para todas las carreras)
    const preguntasBase = [
      {
        texto: 'Indica tu percepci√≥n sobre el respeto, manejo de aula y comunicaci√≥n del docente con los estudiantes',
        categoria: 'Comunicaci√≥n',
        tipo: 'rating',
        opciones: { type: 'scale', min: 1, max: 5, labels: ['Muy deficiente', 'Deficiente', 'Aceptable', 'Buena', 'Excelente'] },
        orden: 1
      },
      {
        texto: '¬øEn qu√© medida el docente cumple y aplica los objetivos planteados al inicio de la asignatura, y qu√© tan claros resultan durante el desarrollo de las clases?',
        categoria: 'Conocimiento del Tema',
        tipo: 'rating',
        opciones: { type: 'scale', min: 1, max: 5, labels: ['Muy malo', 'Malo', 'Regular', 'Bueno', 'Excelente'] },
        orden: 2
      },
      {
        texto: '¬øQu√© tan organizado(a) consideras que es el docente en la secuencia de sus clases?',
        categoria: 'Metodolog√≠a de Ense√±anza',
        tipo: 'rating',
        opciones: { type: 'scale', min: 1, max: 5, labels: ['Muy malo', 'Malo', 'Regular', 'Bueno', 'Excelente'] },
        orden: 3
      },
      {
        texto: '¬øQu√© estrategias o m√©todos de ense√±anza emplea el profesor que te ayudan m√°s a comprender los conceptos t√©cnicos o cient√≠ficos?',
        categoria: 'Metodolog√≠a de Ense√±anza',
        tipo: 'text',
        opciones: { type: 'text', placeholder: 'Escribe tu respuesta aqu√≠...' },
        orden: 4
      },
      {
        texto: '¬øCon qu√© frecuencia el profesor promueve la participaci√≥n y el an√°lisis cr√≠tico en clase?',
        categoria: 'Metodolog√≠a de Ense√±anza',
        tipo: 'rating',
        opciones: { type: 'scale', min: 1, max: 5, labels: ['Nunca', 'Rara vez', 'A veces', 'Frecuentemente', 'Siempre'] },
        orden: 5
      },
      {
        texto: 'Describe una actividad, proyecto o pr√°ctica que haya contribuido a tu aprendizaje en esta materia.',
        categoria: 'Evaluaci√≥n',
        tipo: 'text',
        opciones: { type: 'text', placeholder: 'Escribe tu respuesta aqu√≠...' },
        orden: 6
      },
      {
        texto: '¬øQu√© tan √∫til consideras la retroalimentaci√≥n del profesor para mejorar tu desempe√±o acad√©mico?',
        categoria: 'Evaluaci√≥n',
        tipo: 'rating',
        opciones: { type: 'scale', min: 1, max: 5, labels: ['Muy malo', 'Malo', 'Regular', 'Bueno', 'Excelente'] },
        orden: 7
      },
      {
        texto: '¬øQu√© sugerencias podr√≠as dar al docente para fortalecer el proceso de ense√±anza-aprendizaje en esta asignatura?',
        categoria: 'Metodolog√≠a de Ense√±anza',
        tipo: 'text',
        opciones: { type: 'text', placeholder: 'Escribe tu respuesta aqu√≠...' },
        orden: 8
      }
    ];
    
    // Preguntas espec√≠ficas por carrera
    const preguntasEspecificas = {
      1: [ // Ingenier√≠a de Sistemas
        {
          texto: '¬øEn qu√© medida el profesor relaciona los contenidos de la clase con problem√°ticas reales del campo de la Ingenier√≠a de Sistemas?',
          categoria: 'Conocimiento del Tema',
          tipo: 'rating',
          opciones: { type: 'scale', min: 1, max: 5, labels: ['Muy malo', 'Malo', 'Regular', 'Bueno', 'Excelente'] },
          orden: 9
        },
        {
          texto: '¬øQu√© tanto sientes que las actividades en clase te ayudan a desarrollar una conciencia √©tica y social sobre el uso de la tecnolog√≠a y la informaci√≥n?',
          categoria: 'Disponibilidad',
          tipo: 'rating',
          opciones: { type: 'scale', min: 1, max: 5, labels: ['Muy malo', 'Malo', 'Regular', 'Bueno', 'Excelente'] },
          orden: 10
        },
        {
          texto: '¬øC√≥mo describir√≠as el aporte del profesor a tu formaci√≥n como ingeniero(a) de sistemas?',
          categoria: 'Disponibilidad',
          tipo: 'text',
          opciones: { type: 'text', placeholder: 'Escribe tu respuesta aqu√≠...' },
          orden: 11
        }
      ],
      2: [ // Ingenier√≠a Civil
        {
          texto: '¬øEn qu√© medida el profesor relaciona los contenidos de la clase con problem√°ticas reales de la Ingenier√≠a Civil?',
          categoria: 'Conocimiento del Tema',
          tipo: 'rating',
          opciones: { type: 'scale', min: 1, max: 5, labels: ['Muy malo', 'Malo', 'Regular', 'Bueno', 'Excelente'] },
          orden: 9
        },
        {
          texto: '¬øQu√© tanto sientes que las actividades en clase te ayudan a desarrollar una conciencia sobre la responsabilidad social y ambiental del ingeniero civil?',
          categoria: 'Disponibilidad',
          tipo: 'rating',
          opciones: { type: 'scale', min: 1, max: 5, labels: ['Muy malo', 'Malo', 'Regular', 'Bueno', 'Excelente'] },
          orden: 10
        },
        {
          texto: '¬øC√≥mo describir√≠as el aporte del profesor a tu formaci√≥n como ingeniero(a) civil?',
          categoria: 'Disponibilidad',
          tipo: 'text',
          opciones: { type: 'text', placeholder: 'Escribe tu respuesta aqu√≠...' },
          orden: 11
        }
      ],
      3: [ // Ingenier√≠a Ambiental
        {
          texto: '¬øEn qu√© medida el profesor relaciona los contenidos de la clase con problem√°ticas ambientales reales?',
          categoria: 'Conocimiento del Tema',
          tipo: 'rating',
          opciones: { type: 'scale', min: 1, max: 5, labels: ['Muy malo', 'Malo', 'Regular', 'Bueno', 'Excelente'] },
          orden: 9
        },
        {
          texto: '¬øQu√© tanto sientes que las actividades en clase te ayudan a desarrollar una conciencia ambiental y social sobre el impacto de la ingenier√≠a en el entorno?',
          categoria: 'Disponibilidad',
          tipo: 'rating',
          opciones: { type: 'scale', min: 1, max: 5, labels: ['Muy malo', 'Malo', 'Regular', 'Bueno', 'Excelente'] },
          orden: 10
        },
        {
          texto: '¬øC√≥mo describir√≠as el aporte del profesor a tu formaci√≥n como ingeniero(a) ambiental?',
          categoria: 'Disponibilidad',
          tipo: 'text',
          opciones: { type: 'text', placeholder: 'Escribe tu respuesta aqu√≠...' },
          orden: 11
        }
      ]
    };
    
    // Insertar preguntas para cada carrera
    for (const carrera of carreras) {
      console.log(`\n   üìö Procesando ${carrera.nombre}...`);
      
      const preguntasParaInsertar = [...preguntasBase];
      
      // Agregar preguntas espec√≠ficas si existen
      if (preguntasEspecificas[carrera.id]) {
        preguntasParaInsertar.push(...preguntasEspecificas[carrera.id]);
      } else if (carrera.id === null) {
        // Para tronco com√∫n, agregar preguntas espec√≠ficas
        preguntasParaInsertar.push(
          {
            texto: '¬øEn qu√© medida el profesor relaciona los contenidos de la clase con problem√°ticas o situaciones reales actuales del entorno social o profesional?',
            categoria: 'Conocimiento del Tema',
            tipo: 'rating',
            opciones: { type: 'scale', min: 1, max: 5, labels: ['Muy malo', 'Malo', 'Regular', 'Bueno', 'Excelente'] },
            orden: 9
          },
          {
            texto: '¬øC√≥mo describir√≠as el aporte del profesor a tu formaci√≥n como ingeniero(a)?',
            categoria: 'Disponibilidad',
            tipo: 'text',
            opciones: { type: 'text', placeholder: 'Escribe tu respuesta aqu√≠...' },
            orden: 10
          }
        );
      }
      
      // Preparar datos para inserci√≥n
      const datosInsercion = preguntasParaInsertar.map(pregunta => ({
        categoria_id: categoriaMap[pregunta.categoria],
        texto_pregunta: pregunta.texto,
        descripcion: `Pregunta para ${carrera.nombre} - ${pregunta.categoria}`,
        tipo_pregunta: pregunta.tipo,
        opciones: pregunta.opciones,
        obligatoria: true,
        orden: pregunta.orden,
        activa: true,
        id_carrera: carrera.id
      }));
      
      // Insertar preguntas
      const { error: errorInsert } = await supabase
        .from('preguntas_evaluacion')
        .insert(datosInsercion);
      
      if (errorInsert) {
        console.log(`   ‚ùå Error insertando preguntas para ${carrera.nombre}:`, errorInsert.message);
      } else {
        console.log(`   ‚úÖ ${datosInsercion.length} preguntas insertadas para ${carrera.nombre}`);
      }
    }
    
    // Paso 5: Verificaci√≥n final
    console.log('\nüìù Paso 5: Verificaci√≥n final...');
    
    const { data: preguntasFinales, error: errorFinal } = await supabase
      .from('preguntas_evaluacion')
      .select('*')
      .eq('activa', true);
    
    if (errorFinal) {
      console.log('‚ùå Error en verificaci√≥n final:', errorFinal.message);
    } else {
      const porCarrera = {};
      preguntasFinales.forEach(p => {
        const carrera = p.id_carrera ? `Carrera ${p.id_carrera}` : 'Tronco Com√∫n';
        porCarrera[carrera] = (porCarrera[carrera] || 0) + 1;
      });
      
      console.log('‚úÖ Verificaci√≥n completada:');
      console.log(`   üìä Total preguntas activas: ${preguntasFinales.length}`);
      Object.entries(porCarrera).forEach(([carrera, count]) => {
        console.log(`   üìö ${carrera}: ${count} preguntas`);
      });
    }
    
    console.log('\nüéâ ¬°Actualizaci√≥n completada exitosamente!');
    console.log('üìã Las preguntas est√°n listas para ser utilizadas en el sistema');
    
  } catch (error) {
    console.error('‚ùå Error general:', error.message);
  }
}

// Ejecutar el script
ejecutarScriptCompleto();
