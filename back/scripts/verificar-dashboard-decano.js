// Script para verificar el estado del dashboard del Decano
const fs = require('fs');

function verificarDashboardDecano() {
  console.log('üîç Verificando estado del Dashboard del Decano...\n');

  try {
    const filePath = '../front/src/pages/DashboardDecano.tsx';
    const content = fs.readFileSync(filePath, 'utf8');
    
    console.log('üìä 1. Verificando datos mock en el c√≥digo:');
    
    // Buscar los datos mock de carreras
    const carrerasMatch = content.match(/const mockCareers = \[([\s\S]*?)\];/);
    if (carrerasMatch) {
      console.log('‚úÖ Datos mock de carreras encontrados');
      const carrerasCount = (carrerasMatch[1].match(/id:/g) || []).length;
      console.log(`   - ${carrerasCount} carreras mock definidas`);
    } else {
      console.log('‚ùå Datos mock de carreras NO encontrados');
    }
    
    // Buscar los datos mock de profesores
    const profesoresMatch = content.match(/const mockProfessorsByCareer = \{([\s\S]*?)\};/);
    if (profesoresMatch) {
      console.log('‚úÖ Datos mock de profesores encontrados');
      const profesoresCount = (profesoresMatch[1].match(/nombre:/g) || []).length;
      console.log(`   - ${profesoresCount} profesores mock definidos`);
    } else {
      console.log('‚ùå Datos mock de profesores NO encontrados');
    }
    
    console.log('\nüìä 2. Verificando l√≥gica de carga:');
    
    // Verificar si hay console.log para debug
    const debugLogs = (content.match(/console\.log/g) || []).length;
    console.log(`   - ${debugLogs} console.log encontrados para debug`);
    
    // Verificar el useEffect
    const useEffectMatch = content.match(/useEffect\(\(\) => \{[\s\S]*?loadFacultyData\(\);[\s\S]*?\}, \[\]\);/);
    if (useEffectMatch) {
      console.log('‚úÖ useEffect configurado correctamente');
    } else {
      console.log('‚ùå useEffect NO configurado correctamente');
    }
    
    console.log('\nüìä 3. Verificando c√°lculo de estad√≠sticas:');
    
    // Verificar el c√°lculo de totalProfesores
    const totalProfesoresMatch = content.match(/totalProfesores: Object\.values\(professorsByCareer\)\.flat\(\)\.length/);
    if (totalProfesoresMatch) {
      console.log('‚úÖ C√°lculo de totalProfesores correcto');
    } else {
      console.log('‚ùå C√°lculo de totalProfesores incorrecto');
    }
    
    console.log('\nüìä 4. Datos esperados:');
    console.log('   - Carreras: 6 (Sistemas, Civil, Financiera, Industrial, Energ√≠a, Ambiental)');
    console.log('   - Profesores: 10 (6 en Sistemas, 1 en Civil, 3 en Financiera)');
    console.log('   - Profesores Activos: 10 (todos los mock est√°n activos)');
    
    console.log('\nüîß Posibles problemas:');
    console.log('   1. El useEffect no se est√° ejecutando');
    console.log('   2. Los datos mock no se est√°n aplicando al estado');
    console.log('   3. El c√°lculo de estad√≠sticas est√° fallando');
    console.log('   4. El componente se est√° renderizando antes de cargar los datos');
    
    console.log('\nüí° Soluci√≥n recomendada:');
    console.log('   1. Verificar la consola del navegador para ver los console.log');
    console.log('   2. Verificar que el useEffect se ejecute');
    console.log('   3. Verificar que los datos mock se apliquen al estado');
    console.log('   4. Agregar m√°s logs de debug si es necesario');
    
  } catch (error) {
    console.error('‚ùå Error verificando el archivo:', error.message);
  }
}

verificarDashboardDecano();



